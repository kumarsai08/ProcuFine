<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <decisions>
        <name>checking_Inventory_Records</name>
        <label>checking Inventory Records</label>
        <locationX>879</locationX>
        <locationY>743</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>if_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>fetch_Inventory_Rec</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>create_Product_Under_Inventory</targetReference>
            </connector>
            <label>if Null</label>
        </rules>
        <rules>
            <name>if_Exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>fetch_Inventory_Rec.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>if Exist</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Create Inventory {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Create Inventory</label>
    <loops>
        <name>get_Inventory</name>
        <label>get Inventory</label>
        <locationX>527</locationX>
        <locationY>503</locationY>
        <collectionReference>get_OppLineItem</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>fetch_Inventory_Rec</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>fetch_Inventory_Rec</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>create_Product_Under_Inventory</name>
        <label>create Product Under Inventory</label>
        <locationX>615</locationX>
        <locationY>863</locationY>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>get_Inventory.Product2.Name</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Product__c</field>
            <value>
                <elementReference>get_Inventory.Product2.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Quantity__c</field>
            <value>
                <elementReference>get_Inventory.Quantity</elementReference>
            </value>
        </inputAssignments>
        <object>Inventory__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>fetch_Inventory_Rec</name>
        <label>fetch Inventory Rec</label>
        <locationX>879</locationX>
        <locationY>623</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>checking_Inventory_Records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Inventory.Product2.Name</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Inventory__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_OppLineItem</name>
        <label>get OppLineItem</label>
        <locationX>527</locationX>
        <locationY>383</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_Inventory</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>OpportunityLineItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>401</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>get_OppLineItem</targetReference>
        </connector>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Closed Won</stringValue>
            </value>
        </filters>
        <filters>
            <field>record_type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Sales Opportunity</stringValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
